Abstract
The advancement in Internet of Things (IoTs) has increased connectivity between diverse devices. Automation of the composition of a system out of the IoTs is still a hard nut to crack. In this paper we would study major methods for automatic composition of system and compare them. 


Introduction
The idea of composition is to make a system combining services offered by the IoTs.Automatic Composition of such system would not only assit engineers but also make us able to deploy the system in dynamic enviroment without reconfiguration. It would  reduce the configuration (and reconfiguration)cost of systems as well, for example, in industrial production facilities. Owing to fact that different IoTs are forged by a diverse range of backgrounds and knowledge and that no universal standard was in place during the evolution of IoTs, it is difficult to compose a system[2].

Sevral methods have been proposed in by researcher to achieve the goal using different techniques. The key to a practical automated system composer are the requirements described in [1]. v  Overall, Each method of Automatic Composition comprises of four steps (discovery, semantics modeling, selection/planning, and execution) or their variation. In discovery, available services on each device are discovered and expressed the context of each service using semantics. This also helps to abstract away the hardware, the communication protocol, and interface details and to bridge the Heterogeneity[1]. Selection/planning is the core of the Automatic Composition which takes goals as input and uses reasoner to compose the list of services to be used with approperiate configurations. At last stage the services proposed by reasoner are orchestrated to achieve the goals.

Now we have a look how 
System with RESTdesc and Reasoner:
This method[3] is composed of a discoverer which can be used with any system that allows clients to search for URIs of service endpoints. For example, search engines like Dyser.
In order to express high-level semantics of a particular service, it uses RESTdesc with extended capabilities to make it suitable for reasoning (selection and planning stage). A reasoner is used to select services according to the given goals by the user. A graphical interface is provided using ClickScript( a visual programming tool based on javascript) for users to get goals from user. 