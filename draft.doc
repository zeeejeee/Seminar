Abstract

The internet of Things (IoT) has become a very promising technology with potential to revolutionized the world of electronic devices by connecting the billions of devices to internet. IoT resulted in enormous amount of heterogeneous communication protocols, middleware and hardware. In order to gain maximum out of IoT, an automated system composition is required Due the heterogeneity automation of the composition of a system out of the IoTs is still a hard nut to crack. 
This article provides an insight into prominent methods of system composition and the components of mechanisms.

Index terms
Internet of things, semantic technologies, service composition 

Introduction

The idea of composition is to make a system combining services offered by the IoTs. Automatic Composition of such system would not only assist engineers but also make us able to deploy the system in dynamic enviroment without reconfiguration. It would reduce the configuration (and reconfiguration)cost of systems as well, for example, in industrial production facilities[5], healthcare, and home automation. Owing to fact that different IoTs are forged by a diverse range of backgrounds and knowledge and that no universal standard was in place during the evolution of IoTs, it is difficult to compose a system[2].


Several methods have been proposed in by researcher to achieve the goal using different techniques. The key to a practical automated system composer is the requirements described in [1]. Overall, Each method of Automatic Composition comprises of four steps (discovery, semantics modeling, selection/planning, and execution) 	``or their variation. In discovery, available services on each device are discovered and expressed the context of each service using semantics. This also helps to abstract away the hardware, the communication protocol, and interface details and to bridge the Heterogeneity[1]. Selection/planning is the core of the Automatic Composition which takes goals as input and uses a middleware(usually called reasoner) to compose the list of services to be used with appropriate configurations. At last stage the services proposed by reasoner are orchestrated to achieve the goals.

In this article the term composer is used to collectively represent a whole method.

Now we have a look how 
Composition using RESTdesc and Reasoner:
This method[3] is composed of a discoverer which can be used with any system that allows clients to search for URIs of service endpoints. For example, search engines like Dyser.
In order to express high-level semantics of a particular service, it uses RESTdesc with extended capabilities to make it suitable for reasoning (selection and planning stage.RESTdesc is a method for defining hypermedia API features, allowingmachines to autonomously discover what an API is doing. As RESTdesc is based on first order logic, therefore it is not able to express mutually exclusive states. In order to represent such states RESTdesc is added is extended. The reasoner is used to select services according to the given goals by the user. The goals are provided using graphical interface is provided using ClickScript(a visual programming tool based on javascript) for users to get goals from user. The Figure depicts the overall composer structure.

The 
